const express = require('express');
const router = express.Router();


router.get('/l',(req, res) => {
   res.send('Главная после Api')
})
router.get('/news',(req, res) => {
   res.send('Новости')
})
router.get('/get-cookie',(req, res) => {
   console.dir(req.headers['cookie']);
   res.send('get-Cookie')
})
router.get('/set-cookie',(req, res) => {
   res.cookie('color', 'red',{maxAge: 12000})
   res.send('set-Cookie')
})


module.exports = router;

/*
   Создавая куки есть 3й параметр объект опций. 

   domain - управляет поддоменами, на которых могут использоваться cookie;
   path - описание маршрута, на который распространяется действие cookie;
   expires - принимает время объектом Date;
   maxAge - определяет время жизни файла в милисекундах;
   secure - если true, то файлы будут отправляться только по протоколу HTTPS;
   httpOnly - установка в true означает, что файлы будут изменяться только сервером;
   signed - если true, то cookie-файл будет подписан. Предположим что мы с сервера на какой-то запрос
   отсылаем в ответ куки для сохранения настроек. Но пользователь в ручную изменил куки. При следующем запросе 
   куки не создадут новые, а просто выдаст ошибку.

*/



/*
   Отличие от Cookie localStorage и sessionStoprage.
   Cookie имеет настройку вручную, настройку времени жизни, место хранения как в драузере так и сервере,
   поддерживает старые браузеры HTML4/HTML5, обращаться можно с любого окна(вот это не понял).
   Отправляються на сервер при каждом запросе.
   минусы - размер памяти 4 кб/
   Cookie заполняютсья по факту строкой "имя=значение; название параметра=значение параметров".
   Конечно есть каие-то методы которые делают это более удобней. Удаление кук это установка отрицательного времени жизни.
   Cookie - лучше всего подходят для аутинтификации. Просматривая куки мы можем увидеть много параметров.

   LocalStorge нет ручной настройки, время действия Навсегда(до удаления вручную), место хранения только в браузере,
   доступ к значениям LocalStorge открыт для любой страницы одного хоста, потому что нет параметра path как в cookie.
   Поддерживает новые браузеры HTML5, доступ к даным только через браузер, с запросами сервера не работает (как я понял),
   Не отправлаються на сервер при каждом запросе.
   размер памяти 10Мб. 
   LocalStorge -  подходят для хранения настроек сайта. Просматривая localStorage видим ключ и значение

   SessionStorage нет настройки, время жизни пока вкладка открыта, место хранения только в браузере, доступ к значениям SessionStorage
   открыт для любой страницы одного хоста, потому что нет параметра path как в cookie(надо проверить).
   Поддерживает новые браузеры HTML5, доступ к данным только через браузер, с запросами сервера не работает (как я понял),
   Не отправлаються на сервер при каждом запросе.
   размер памяти 5Мб.

   SessionStorage -  подходят для хранения настроек на время открытой вкладки сайта.Просматривая SessionStorage видим ключ и значение
*/